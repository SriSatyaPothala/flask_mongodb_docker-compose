version: '3.4'  # '3.4' or later is required for 'condition' in 'depends_on'

services:
  flask-app:
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: flask-app
    restart: unless-stopped
    ports:
      - "5000:${APP_PORT}"  # Map host port 12345 to container port defined in APP_PORT in .env
    environment:
      MONGODB_HOSTNAME: mongo-container
      MONGODB_DATABASE: flasktest
      MONGODB_COLLECTION: storedstrings
    depends_on:
      mongo-container:
        condition: service_healthy  # Ensure MongoDB container is healthy before starting

  mongo-container: 
    image: mongo:6.0
    container_name: mongo-container
    restart: unless-stopped
    volumes:
      - /home/ubuntu/mylogs:/data/db  # Persist data from the container (/data/db) to the host machine (./data)
    healthcheck: # since flask-app depends on it we want to know this is alive and well
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 5s
      retries: 5
